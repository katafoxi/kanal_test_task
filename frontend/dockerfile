## Separate builder stage to compile SASS, so we can copy just the resulting CSS files.
#FROM rubygem/compass AS builder
#COPY ./src/public /dist
#WORKDIR /dist
#RUN compass compile
## Output: css/app.css

# Use NodeJS server for the app.
FROM node:18-slim

# Install dependencies first, as they change less often than code.
COPY package.json package-lock.json* ./
RUN npm install --force

#    && npm cache clean --force
# Copy files as a non-root user. The `node` user is built in the Node image.
#RUN useradd --create-home node
#WORKDIR /home/node
#USER node


WORKDIR /usr/src/app
RUN chown node:node ./
USER node

# Defaults to production, docker-compose overrides this to development on build and run.
ARG NODE_ENV=production
ENV NODE_ENV $NODE_ENV


#COPY ./src ./src
COPY --chown=node . .

# Copy compiled CSS styles from builder image.
#COPY --from=builder /dist/css ./dist/css

# Execute NodeJS (not NPM script) to handle SIGTERM and SIGINT signals.
#CMD ["node", "./src/index.js"]
CMD ["npm", "start"]
