version: '3.1'

services:

  db:
    container_name: pg_db
    image: postgres

    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: project_db
      PGDATA: "/var/lib/postgresql/data"

    volumes:
      - ../postgres:/docker-entrypoint-initdb.d
      - ../postgres/postgres_data:/var/lib/postgresql/data
     # - ./customPostgresql.conf:/etc/postgresql.conf # файл конфигурирования ДБ

    ports:
      - "54321:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d project_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres
#    logging:
#      driver: none
    
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: noemail@gmail.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - ../postgres/pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres
#    logging:
#      driver: none

  script:
    build:
      dockerfile: ../script/dockerfile
      context: ../script/
    container_name: script
    image: script:v1
    networks:
      - postgres
    depends_on:
      - db


  backend:
    build:
      dockerfile: ../backend/dockerfile
      context: ../backend
    container_name: backend
    image: backend:v1
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ../backend:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=project_db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    networks:
      - postgres
    depends_on:
      - db
      - script

  frontend:
    build:
      dockerfile: ../frontend/dockerfile
      context: ../frontend
    container_name: frontend
    image: frontend:v1
    command: npm start
    ports:
      - "3000:3000"
    networks:
      - postgres
    depends_on:
      - db
      - script
      - backend

networks:
  postgres:
    driver: bridge
